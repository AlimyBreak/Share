function [] = SVMModelToC(svm_model,dstfilename)

    part = split(dstfilename,'.');
    file_name_part_1 = part{1};
    fid = fopen(['svm_model_',file_name_part_1,'.c'],'w');

    %%
    fprintf(fid,'%s\n',['#ifndef ','__', upper(['svm_model_',file_name_part_1]),'_C__'] );
    fprintf(fid,'%s\n',['#define ','__', upper(['svm_model_',file_name_part_1]),'_C__'] );
    fprintf(fid,'\n');
    fprintf(fid,'%s\n','#include <stdint.h>');
    fprintf(fid,'%s\n\n','#include "svm_model.h"');
    
    %% file information 
    fprintf(fid,'/* \ngenerated by SVMModelToC.m %s .\n',datetime);
    fprintf(fid,'Const Global Size: \n');
    fprintf(fid,'    size(label)       = %d(Bytes)\n',length(svm_model.Label)*1);
    fprintf(fid,'    size(sv_coef)     = %d(Bytes)\n',length(svm_model.sv_coef*4));
    fprintf(fid,'    size(SVs)         = %d(Bytes)\n',size(svm_model.SVs,1)*size(svm_model.SVs,2)*4);
    fprintf(fid,'    size(svm_model_t) = %d(Bytes)\n',34);
    const_bytes_total = length(svm_model.Label)*1 + length(svm_model.sv_coef*4) + size(svm_model.SVs,1)*size(svm_model.SVs,2)*4 + 34;
    fprintf(fid,'    const_bytes_total = %d(Bytes) = %f(KBytes) = %f(MBytes) \n',const_bytes_total,const_bytes_total/1024,const_bytes_total/(1024*1024));
    fprintf(fid,'*/ \n');
    %Ð´svm_model.labels
    fprintf(fid,'const int8_t %s[%d] = {', [file_name_part_1,'_lable'],length(svm_model.Label));
    for i = 1:length(svm_model.Label)
        fprintf(fid,'%d,',svm_model.Label(i));
    end
    fprintf(fid,'};\n\n');
    %Ð´svm_model.sv_coef
    fprintf(fid,'const float %s[%d] = {', [file_name_part_1,'_coef'],length(svm_model.sv_coef));
    for i = 1:length(svm_model.sv_coef)
        fprintf(fid,'%ff,  ',svm_model.sv_coef(i));
    end
    fprintf(fid,'};\n\n');
    
    %Ð´svm_model.svm_SVs
    fprintf(fid,'const float %s[%d*%d] = {\n', [file_name_part_1,'_SVs'],size(svm_model.SVs,1),size(svm_model.SVs,2));
    full_SVs = full(svm_model.SVs);
    for i =  1:size(svm_model.SVs,1)
        fprintf(fid,'    ');
        for j = 1:size(svm_model.SVs,2)
            fprintf(fid,'%ff,  ',full_SVs(i,j));
        end
        fprintf(fid,'\n');
    end
    fprintf(fid,'};\n\n');
    
    % Ð´½á¹¹Ìå
    fprintf(fid,'%s\n',['const svm_model_t ',[file_name_part_1,'_model_s'],' = { ']);
    fprintf(fid,'/*svm_type         */  %d,      \n', svm_model.Parameters(1)        );       %-s
    fprintf(fid,'/*svm_kf_type      */  %d,      \n', svm_model.Parameters(2)        );       %-t
    fprintf(fid,'/*svm_degree       */  %ff,     \n', svm_model.Parameters(3)        );       %-d
    fprintf(fid,'/*svm_gamma        */  %ff,     \n', svm_model.Parameters(4)        );       %-g
    fprintf(fid,'/*svm_coef0        */  %ff,     \n', svm_model.Parameters(5)        );       %-r
    fprintf(fid,'/*svm_nr_class     */  %d,      \n', svm_model.nr_class             );       %nr_class
    fprintf(fid,'/*svm_labels       */  %s,      \n', [file_name_part_1,'_lable']   );       %svm_labels
    fprintf(fid,'/*svm_totalSV      */  %d,      \n', svm_model.totalSV              );       %totalSV
    fprintf(fid,'/*svm_num_features */  %d,      \n', size(svm_model.SVs,2)          );       %svm_num_features
    fprintf(fid,'/*svm_sv_coef      */  %s,      \n', [file_name_part_1,'_coef']     );       %svm_sv_coef
    fprintf(fid,'/*svm_SVs          */  %s,      \n', [file_name_part_1,'_SVs']      );       %svm_SVs
    fprintf(fid,'/*svm_rho          */  %ff,     \n', svm_model.rho                  );       %svm_rho
    fprintf(fid,'};\n');
    fprintf(fid,'\n');
    fprintf(fid,'%s\n',['#endif ',' /* !'  ,upper(file_name_part_1),'*/']);
    fprintf(fid,'\n');
    fclose(fid);
end